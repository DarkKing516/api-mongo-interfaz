{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jhon Z\\\\Desktop\\\\api-mongo-interfaz\\\\react-mongo-interfaz\\\\src\\\\NuevoPedidoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NuevoPedidoForm = ({\n  onPedidoAgregado\n}) => {\n  _s();\n  const [nuevoPedido, setNuevoPedido] = useState({\n    fecha_creacion: '',\n    fecha_pedido: '',\n    total_pedido: 0,\n    estado_pedido: 'por hacer',\n    productos: null,\n    servicios: null\n  });\n  const [productosOptions, setProductosOptions] = useState([]);\n  const [serviciosOptions, setServiciosOptions] = useState([]);\n  useEffect(() => {\n    const productosOptionsData = [{\n      value: 'arrayMediasEscolares',\n      label: 'Medias Escolares'\n    }, {\n      value: 'arrayCamisetaBasica',\n      label: 'Camiseta Básica'\n    }\n    // Agregar más opciones según sea necesario\n    ];\n\n    const serviciosOptionsData = [{\n      value: 'arrayMunecoPorcelanicron',\n      label: 'Muñeco de Porcelanicron'\n    }, {\n      value: 'arrayEntubarPantalon',\n      label: 'Entubar Pantalón'\n    }\n    // Agregar más opciones según sea necesario\n    ];\n\n    setProductosOptions(productosOptionsData);\n    setServiciosOptions(serviciosOptionsData);\n  }, []);\n  useEffect(() => {\n    const fechaCreacionActual = new Date().toISOString().split('T')[0];\n    setNuevoPedido(prevPedido => ({\n      ...prevPedido,\n      fecha_creacion: fechaCreacionActual,\n      fecha_pedido: new Date(new Date(fechaCreacionActual).getTime() + 5 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n    }));\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNuevoPedido(prevPedido => ({\n      ...prevPedido,\n      [name]: value\n    }));\n  };\n  const handleProductoChange = selectedOption => {\n    setNuevoPedido(prevPedido => ({\n      ...prevPedido,\n      productos: (selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value) || null\n    }));\n  };\n  const handleServicioChange = selectedOption => {\n    setNuevoPedido(prevPedido => ({\n      ...prevPedido,\n      servicios: (selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value) || null\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Realizar la solicitud POST a la API para agregar un nuevo pedido\n      const response = await axios.post('http://localhost:3000/pedidos', {\n        ...nuevoPedido,\n        // Envía solo el valor seleccionado, no el objeto completo\n        productos: nuevoPedido.productos,\n        servicios: nuevoPedido.servicios\n      });\n      onPedidoAgregado(response.data); // Llama a la función proporcionada para actualizar el estado de pedidos en la lista\n      setNuevoPedido({\n        fecha_creacion: '',\n        fecha_pedido: '',\n        total_pedido: 0,\n        estado_pedido: 'por hacer',\n        productos: null,\n        servicios: null\n      });\n    } catch (error) {\n      console.error('Error al agregar un nuevo pedido:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      minHeight: '100%',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Fecha de Creaci\\xF3n:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"fecha_creacion\",\n      value: nuevoPedido.fecha_creacion,\n      onChange: handleInputChange,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Fecha de Pedido:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"fecha_pedido\",\n      value: nuevoPedido.fecha_pedido,\n      onChange: handleInputChange,\n      min: nuevoPedido.fecha_creacion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Seleccionar Producto:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: productosOptions,\n      value: productosOptions.find(option => option.value === nuevoPedido.productos),\n      onChange: handleProductoChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Seleccionar Servicio:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: serviciosOptions,\n      value: serviciosOptions.find(option => option.value === nuevoPedido.servicios),\n      onChange: handleServicioChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Total Pedido:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"total_pedido\",\n      value: nuevoPedido.total_pedido,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Agregar Pedido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(NuevoPedidoForm, \"7psWmaYKdqdjifr70vGKt19lqpc=\");\n_c = NuevoPedidoForm;\nexport default NuevoPedidoForm;\nvar _c;\n$RefreshReg$(_c, \"NuevoPedidoForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","Select","jsxDEV","_jsxDEV","NuevoPedidoForm","onPedidoAgregado","_s","nuevoPedido","setNuevoPedido","fecha_creacion","fecha_pedido","total_pedido","estado_pedido","productos","servicios","productosOptions","setProductosOptions","serviciosOptions","setServiciosOptions","productosOptionsData","value","label","serviciosOptionsData","fechaCreacionActual","Date","toISOString","split","prevPedido","getTime","handleInputChange","e","name","target","handleProductoChange","selectedOption","handleServicioChange","handleSubmit","preventDefault","response","post","data","error","console","style","display","alignItems","minHeight","flexDirection","justifyContent","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","readOnly","min","options","find","option","_c","$RefreshReg$"],"sources":["C:/Users/Jhon Z/Desktop/api-mongo-interfaz/react-mongo-interfaz/src/NuevoPedidoForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\n\r\nconst NuevoPedidoForm = ({ onPedidoAgregado }) => {\r\n    const [nuevoPedido, setNuevoPedido] = useState({\r\n        fecha_creacion: '',\r\n        fecha_pedido: '',\r\n        total_pedido: 0,\r\n        estado_pedido: 'por hacer',\r\n        productos: null,\r\n        servicios: null,\r\n    });\r\n\r\n    const [productosOptions, setProductosOptions] = useState([]);\r\n    const [serviciosOptions, setServiciosOptions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const productosOptionsData = [\r\n            { value: 'arrayMediasEscolares', label: 'Medias Escolares' },\r\n            { value: 'arrayCamisetaBasica', label: 'Camiseta Básica' },\r\n            // Agregar más opciones según sea necesario\r\n        ];\r\n\r\n        const serviciosOptionsData = [\r\n            { value: 'arrayMunecoPorcelanicron', label: 'Muñeco de Porcelanicron' },\r\n            { value: 'arrayEntubarPantalon', label: 'Entubar Pantalón' },\r\n            // Agregar más opciones según sea necesario\r\n        ];\r\n\r\n        setProductosOptions(productosOptionsData);\r\n        setServiciosOptions(serviciosOptionsData);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fechaCreacionActual = new Date().toISOString().split('T')[0];\r\n        setNuevoPedido((prevPedido) => ({\r\n            ...prevPedido,\r\n            fecha_creacion: fechaCreacionActual,\r\n            fecha_pedido: new Date(new Date(fechaCreacionActual).getTime() + 5 * 24 * 60 * 60 * 1000)\r\n                .toISOString()\r\n                .split('T')[0],\r\n        }));\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNuevoPedido((prevPedido) => ({\r\n            ...prevPedido,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleProductoChange = (selectedOption) => {\r\n        setNuevoPedido((prevPedido) => ({\r\n            ...prevPedido,\r\n            productos: selectedOption?.value || null,\r\n        }));\r\n    };\r\n\r\n    const handleServicioChange = (selectedOption) => {\r\n        setNuevoPedido((prevPedido) => ({\r\n            ...prevPedido,\r\n            servicios: selectedOption?.value || null,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // Realizar la solicitud POST a la API para agregar un nuevo pedido\r\n            const response = await axios.post('http://localhost:3000/pedidos', {\r\n                ...nuevoPedido,\r\n                // Envía solo el valor seleccionado, no el objeto completo\r\n                productos: nuevoPedido.productos,\r\n                servicios: nuevoPedido.servicios,\r\n            });\r\n            onPedidoAgregado(response.data); // Llama a la función proporcionada para actualizar el estado de pedidos en la lista\r\n            setNuevoPedido({\r\n                fecha_creacion: '',\r\n                fecha_pedido: '',\r\n                total_pedido: 0,\r\n                estado_pedido: 'por hacer',\r\n                productos: null,\r\n                servicios: null,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error al agregar un nuevo pedido:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form\r\n            style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                minHeight: '100%',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n            }}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <label>Fecha de Creación:</label>\r\n            <input\r\n                type=\"date\"\r\n                name=\"fecha_creacion\"\r\n                value={nuevoPedido.fecha_creacion}\r\n                onChange={handleInputChange}\r\n                readOnly\r\n            />\r\n\r\n            <label>Fecha de Pedido:</label>\r\n            <input\r\n                type=\"date\"\r\n                name=\"fecha_pedido\"\r\n                value={nuevoPedido.fecha_pedido}\r\n                onChange={handleInputChange}\r\n                min={nuevoPedido.fecha_creacion}\r\n            />\r\n\r\n            <label>Seleccionar Producto:</label>\r\n            <Select\r\n                options={productosOptions}\r\n                value={productosOptions.find((option) => option.value === nuevoPedido.productos)}\r\n                onChange={handleProductoChange}\r\n            />\r\n\r\n            <label>Seleccionar Servicio:</label>\r\n            <Select\r\n                options={serviciosOptions}\r\n                value={serviciosOptions.find((option) => option.value === nuevoPedido.servicios)}\r\n                onChange={handleServicioChange}\r\n            />\r\n\r\n\r\n            <label>Total Pedido:</label>\r\n            <input\r\n                type=\"number\"\r\n                name=\"total_pedido\"\r\n                value={nuevoPedido.total_pedido}\r\n                onChange={handleInputChange}\r\n            />\r\n            <br />\r\n            <button type=\"submit\">Agregar Pedido</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NuevoPedidoForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
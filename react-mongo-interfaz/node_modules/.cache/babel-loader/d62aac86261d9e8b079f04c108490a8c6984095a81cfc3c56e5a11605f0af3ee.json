{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jhon Z\\\\Desktop\\\\api-mongo-interfaz\\\\react-mongo-interfaz\\\\src\\\\NuevoPedidoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NuevoPedidoForm = ({\n  onPedidoAgregado\n}) => {\n  _s();\n  const [nuevoPedido, setNuevoPedido] = useState({\n    fecha_creacion: '',\n    fecha_pedido: '',\n    total_pedido: 0,\n    estado_pedido: 'por hacer',\n    productos: null,\n    servicios: null\n  });\n\n  // Utiliza useEffect para actualizar la fecha_creacion al montar el componente\n  useEffect(() => {\n    const fechaCreacionActual = new Date().toISOString().split('T')[0];\n    setNuevoPedido(prevPedido => ({\n      ...prevPedido,\n      fecha_creacion: fechaCreacionActual,\n      // Establecer la fecha de pedido como mínimo 5 días después de la fecha de creación\n      fecha_pedido: new Date(new Date(fechaCreacionActual).getTime() + 5 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n    }));\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNuevoPedido(prevPedido => ({\n      ...prevPedido,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Realizar la solicitud POST a la API para agregar un nuevo pedido\n      const response = await axios.post('http://localhost:3000/pedidos', nuevoPedido);\n      onPedidoAgregado(response.data); // Llama a la función proporcionada para actualizar el estado de pedidos en la lista\n      setNuevoPedido({\n        fecha_creacion: '',\n        fecha_pedido: '',\n        total_pedido: 0,\n        estado_pedido: 'por hacer',\n        productos: null,\n        servicios: null\n      });\n    } catch (error) {\n      console.error('Error al agregar un nuevo pedido:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      minHeight: '100%',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Fecha de Creaci\\xF3n:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"fecha_creacion\",\n      value: nuevoPedido.fecha_creacion,\n      onChange: handleInputChange,\n      readOnly: true // Hace que el campo sea de solo lectura para que no se pueda editar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Fecha de Pedido:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"fecha_pedido\",\n      value: nuevoPedido.fecha_pedido,\n      onChange: handleInputChange,\n      min: nuevoPedido.fecha_creacion // Establece la fecha mínima como la fecha de creación\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Total Pedido:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"total_pedido\",\n      value: nuevoPedido.total_pedido,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Agregar Pedido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(NuevoPedidoForm, \"AOBlD24dbls8ufU2dsJvDbTJTLQ=\");\n_c = NuevoPedidoForm;\nexport default NuevoPedidoForm;\nvar _c;\n$RefreshReg$(_c, \"NuevoPedidoForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","NuevoPedidoForm","onPedidoAgregado","_s","nuevoPedido","setNuevoPedido","fecha_creacion","fecha_pedido","total_pedido","estado_pedido","productos","servicios","fechaCreacionActual","Date","toISOString","split","prevPedido","getTime","handleInputChange","e","name","value","target","handleSubmit","preventDefault","response","post","data","error","console","style","display","alignItems","minHeight","flexDirection","justifyContent","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","readOnly","min","_c","$RefreshReg$"],"sources":["C:/Users/Jhon Z/Desktop/api-mongo-interfaz/react-mongo-interfaz/src/NuevoPedidoForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst NuevoPedidoForm = ({ onPedidoAgregado }) => {\r\n    const [nuevoPedido, setNuevoPedido] = useState({\r\n        fecha_creacion: '',\r\n        fecha_pedido: '',\r\n        total_pedido: 0,\r\n        estado_pedido: 'por hacer',\r\n        productos: null,\r\n        servicios: null,\r\n    });\r\n\r\n    // Utiliza useEffect para actualizar la fecha_creacion al montar el componente\r\n    useEffect(() => {\r\n        const fechaCreacionActual = new Date().toISOString().split('T')[0];\r\n        setNuevoPedido((prevPedido) => ({\r\n            ...prevPedido,\r\n            fecha_creacion: fechaCreacionActual,\r\n            // Establecer la fecha de pedido como mínimo 5 días después de la fecha de creación\r\n            fecha_pedido: new Date(new Date(fechaCreacionActual).getTime() + 5 * 24 * 60 * 60 * 1000)\r\n                .toISOString()\r\n                .split('T')[0],\r\n        }));\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNuevoPedido((prevPedido) => ({\r\n            ...prevPedido,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // Realizar la solicitud POST a la API para agregar un nuevo pedido\r\n            const response = await axios.post('http://localhost:3000/pedidos', nuevoPedido);\r\n            onPedidoAgregado(response.data); // Llama a la función proporcionada para actualizar el estado de pedidos en la lista\r\n            setNuevoPedido({\r\n                fecha_creacion: '',\r\n                fecha_pedido: '',\r\n                total_pedido: 0,\r\n                estado_pedido: 'por hacer',\r\n                productos: null,\r\n                servicios: null,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error al agregar un nuevo pedido:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form\r\n            style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                minHeight: '100%',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n            }}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <label>Fecha de Creación:</label>\r\n            <input\r\n                type=\"date\"\r\n                name=\"fecha_creacion\"\r\n                value={nuevoPedido.fecha_creacion}\r\n                onChange={handleInputChange}\r\n                readOnly // Hace que el campo sea de solo lectura para que no se pueda editar\r\n            />\r\n\r\n            <label>Fecha de Pedido:</label>\r\n            <input\r\n                type=\"date\"\r\n                name=\"fecha_pedido\"\r\n                value={nuevoPedido.fecha_pedido}\r\n                onChange={handleInputChange}\r\n                min={nuevoPedido.fecha_creacion} // Establece la fecha mínima como la fecha de creación\r\n            />\r\n\r\n            {/* <input\r\n                type=\"date\"\r\n                name=\"fecha_pedido\"\r\n                value={nuevoPedido.fecha_pedido}\r\n                onChange={handleInputChange}\r\n                min={new Date(new Date(nuevoPedido.fecha_creacion).getTime() + 5 * 24 * 60 * 60 * 1000)\r\n                    .toISOString()\r\n                    .split('T')[0]}\r\n            /> */}\r\n\r\n            <label>Total Pedido:</label>\r\n            <input\r\n                type=\"number\"\r\n                name=\"total_pedido\"\r\n                value={nuevoPedido.total_pedido}\r\n                onChange={handleInputChange}\r\n            />\r\n            <br />\r\n            <button type=\"submit\">Agregar Pedido</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NuevoPedidoForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}